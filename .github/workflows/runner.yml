name: Run action (E2E tests)

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  default-inputs:
    name: Defaults
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        kubernetes: [v1.29.0,v1.28.5,v1.27.9,v1.26.11]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate default driver
        run: 'cat $MINIKUBE_HOME/.minikube/machines/minikube/config.json | jq ".DriverName" | grep none'
  docker-driver:
    name: Docker driver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: v1.29.0
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate Docker driver
        run: 'cat $MINIKUBE_HOME/.minikube/machines/minikube/config.json | jq ".DriverName" | grep docker'
      - name: Validate ssh access
        run: minikube ssh --native-ssh=false "cat /etc/os-release"
  extra-args:
    name: Extra arguments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: v1.29.0
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--addons=registry --addons=metrics-server'
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate enabled addon in arg
        run: minikube addons list -o json | jq '.registry.Status' | grep enabled
  ingress:
    name: Ingress enabled
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: v1.29.0
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--addons=ingress'
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate enabled addon in arg
        run: minikube addons list -o json | jq '.ingress.Status' | grep enabled
  container-runtime:
    name: Container runtime config in docker driver (Required by containerd)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubernetes: [v1.29.0,v1.28.5,v1.27.9,v1.26.11,v1.19.16]
        container_runtime: ['containerd']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          container runtime: ${{ matrix.container_runtime }}
          driver: docker
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate container runtime (${{ matrix.container_runtime }})
        run: 'cat $MINIKUBE_HOME/.minikube/machines/minikube/config.json | jq ".Driver.NodeConfig.ContainerRuntime" | grep "${{ matrix.container_runtime }}"'
  unsupported:
    name: Unsupported K8s versions
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        kubernetes: [v1.25.16,v1.24.17,v1.23.17,v1.22.17,v1.21.14,v1.20.15,v1.19.16,v1.18.20,v1.17.17]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.32.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate default driver
        run: 'cat $MINIKUBE_HOME/.minikube/machines/minikube/config.json | jq ".DriverName" | grep none'
  legacy-20:
    name: Legacy/old versions (Ubuntu 20, Minikube 1.18, K8s 1.14)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Test Action
        uses: ./
        with:
          minikube version: v1.18.0
          kubernetes version: v1.14.10
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--force'
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Validate default driver
        run: 'cat $MINIKUBE_HOME/.minikube/machines/minikube/config.json | jq ".DriverName" | grep none'
